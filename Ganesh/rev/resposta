
./entenda-me:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000238 <.interp>:
 238:	2f                   	(bad)  
 239:	6c                   	ins    BYTE PTR es:[rdi],dx
 23a:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 241:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 246:	78 2d                	js     275 <_init-0x27b>
 248:	78 38                	js     282 <_init-0x26e>
 24a:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 250:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 251:	2e 32 00             	xor    al,BYTE PTR cs:[rax]

Disassembly of section .note.ABI-tag:

0000000000000254 <.note.ABI-tag>:
 254:	04 00                	add    al,0x0
 256:	00 00                	add    BYTE PTR [rax],al
 258:	10 00                	adc    BYTE PTR [rax],al
 25a:	00 00                	add    BYTE PTR [rax],al
 25c:	01 00                	add    DWORD PTR [rax],eax
 25e:	00 00                	add    BYTE PTR [rax],al
 260:	47                   	rex.RXB
 261:	4e 55                	rex.WRX push rbp
 263:	00 00                	add    BYTE PTR [rax],al
 265:	00 00                	add    BYTE PTR [rax],al
 267:	00 03                	add    BYTE PTR [rbx],al
 269:	00 00                	add    BYTE PTR [rax],al
 26b:	00 02                	add    BYTE PTR [rdx],al
 26d:	00 00                	add    BYTE PTR [rax],al
 26f:	00 00                	add    BYTE PTR [rax],al
 271:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000000274 <.note.gnu.build-id>:
 274:	04 00                	add    al,0x0
 276:	00 00                	add    BYTE PTR [rax],al
 278:	14 00                	adc    al,0x0
 27a:	00 00                	add    BYTE PTR [rax],al
 27c:	03 00                	add    eax,DWORD PTR [rax]
 27e:	00 00                	add    BYTE PTR [rax],al
 280:	47                   	rex.RXB
 281:	4e 55                	rex.WRX push rbp
 283:	00 bf 7c 5c 4b 5e    	add    BYTE PTR [rdi+0x5e4b5c7c],bh
 289:	93                   	xchg   ebx,eax
 28a:	d2 c0                	rol    al,cl
 28c:	eb 3f                	jmp    2cd <_init-0x223>
 28e:	26 6a ef             	es push 0xffffffffffffffef
 291:	bd 28 34 31 50       	mov    ebp,0x50313428
 296:	e8                   	.byte 0xe8
 297:	66                   	data16

Disassembly of section .gnu.hash:

0000000000000298 <.gnu.hash>:
 298:	01 00                	add    DWORD PTR [rax],eax
 29a:	00 00                	add    BYTE PTR [rax],al
 29c:	01 00                	add    DWORD PTR [rax],eax
 29e:	00 00                	add    BYTE PTR [rax],al
 2a0:	01 00                	add    DWORD PTR [rax],eax
	...

Disassembly of section .dynsym:

00000000000002b8 <.dynsym>:
	...
 2d0:	3f                   	(bad)  
 2d1:	00 00                	add    BYTE PTR [rax],al
 2d3:	00 20                	add    BYTE PTR [rax],ah
	...
 2e5:	00 00                	add    BYTE PTR [rax],al
 2e7:	00 0b                	add    BYTE PTR [rbx],cl
 2e9:	00 00                	add    BYTE PTR [rax],al
 2eb:	00 12                	add    BYTE PTR [rdx],dl
	...
 2fd:	00 00                	add    BYTE PTR [rax],al
 2ff:	00 21                	add    BYTE PTR [rcx],ah
 301:	00 00                	add    BYTE PTR [rax],al
 303:	00 12                	add    BYTE PTR [rdx],dl
	...
 315:	00 00                	add    BYTE PTR [rax],al
 317:	00 5b 00             	add    BYTE PTR [rbx+0x0],bl
 31a:	00 00                	add    BYTE PTR [rax],al
 31c:	20 00                	and    BYTE PTR [rax],al
	...
 32e:	00 00                	add    BYTE PTR [rax],al
 330:	6a 00                	push   0x0
 332:	00 00                	add    BYTE PTR [rax],al
 334:	20 00                	and    BYTE PTR [rax],al
	...
 346:	00 00                	add    BYTE PTR [rax],al
 348:	12 00                	adc    al,BYTE PTR [rax]
 34a:	00 00                	add    BYTE PTR [rax],al
 34c:	22 00                	and    al,BYTE PTR [rax]
	...

Disassembly of section .dynstr:

0000000000000360 <.dynstr>:
 360:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
 364:	63 2e                	movsxd ebp,DWORD PTR [rsi]
 366:	73 6f                	jae    3d7 <_init-0x119>
 368:	2e 36 00 70 72       	cs add BYTE PTR ss:[rax+0x72],dh
 36d:	69 6e 74 66 00 5f 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f5f0066
 374:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
 377:	5f                   	pop    rdi
 378:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 37e:	7a 65                	jp     3e5 <_init-0x10b>
 380:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 383:	6c                   	ins    BYTE PTR es:[rdi],dx
 384:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
 38b:	72 74                	jb     401 <_init-0xef>
 38d:	5f                   	pop    rdi
 38e:	6d                   	ins    DWORD PTR es:[rdi],dx
 38f:	61                   	(bad)  
 390:	69 6e 00 47 4c 49 42 	imul   ebp,DWORD PTR [rsi+0x0],0x42494c47
 397:	43 5f                	rex.XB pop r15
 399:	32 2e                	xor    ch,BYTE PTR [rsi]
 39b:	32 2e                	xor    ch,BYTE PTR [rsi]
 39d:	35 00 5f 49 54       	xor    eax,0x54495f00
 3a2:	4d 5f                	rex.WRB pop r15
 3a4:	64 65 72 65          	fs gs jb 40d <_init-0xe3>
 3a8:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 3af:	4d 
 3b0:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 3b2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 3b3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 3b4:	65 54                	gs push rsp
 3b6:	61                   	(bad)  
 3b7:	62                   	(bad)  
 3b8:	6c                   	ins    BYTE PTR es:[rdi],dx
 3b9:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
 3bd:	67 6d                	ins    DWORD PTR es:[edi],dx
 3bf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 3c0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 3c1:	5f                   	pop    rdi
 3c2:	73 74                	jae    438 <_init-0xb8>
 3c4:	61                   	(bad)  
 3c5:	72 74                	jb     43b <_init-0xb5>
 3c7:	5f                   	pop    rdi
 3c8:	5f                   	pop    rdi
 3c9:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 3cc:	54                   	push   rsp
 3cd:	4d 5f                	rex.WRB pop r15
 3cf:	72 65                	jb     436 <_init-0xba>
 3d1:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 3d8:	4d 
 3d9:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 3db:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 3dc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 3dd:	65 54                	gs push rsp
 3df:	61                   	(bad)  
 3e0:	62                   	.byte 0x62
 3e1:	6c                   	ins    BYTE PTR es:[rdi],dx
 3e2:	65                   	gs
	...

Disassembly of section .gnu.version:

00000000000003e4 <.gnu.version>:
 3e4:	00 00                	add    BYTE PTR [rax],al
 3e6:	00 00                	add    BYTE PTR [rax],al
 3e8:	02 00                	add    al,BYTE PTR [rax]
 3ea:	02 00                	add    al,BYTE PTR [rax]
 3ec:	00 00                	add    BYTE PTR [rax],al
 3ee:	00 00                	add    BYTE PTR [rax],al
 3f0:	02 00                	add    al,BYTE PTR [rax]

Disassembly of section .gnu.version_r:

00000000000003f8 <.gnu.version_r>:
 3f8:	01 00                	add    DWORD PTR [rax],eax
 3fa:	01 00                	add    DWORD PTR [rax],eax
 3fc:	01 00                	add    DWORD PTR [rax],eax
 3fe:	00 00                	add    BYTE PTR [rax],al
 400:	10 00                	adc    BYTE PTR [rax],al
 402:	00 00                	add    BYTE PTR [rax],al
 404:	00 00                	add    BYTE PTR [rax],al
 406:	00 00                	add    BYTE PTR [rax],al
 408:	75 1a                	jne    424 <_init-0xcc>
 40a:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [rcx],0x20000
 410:	33 00                	xor    eax,DWORD PTR [rax]
 412:	00 00                	add    BYTE PTR [rax],al
 414:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000000418 <.rela.dyn>:
 418:	b8 0d 20 00 00       	mov    eax,0x200d
 41d:	00 00                	add    BYTE PTR [rax],al
 41f:	00 08                	add    BYTE PTR [rax],cl
 421:	00 00                	add    BYTE PTR [rax],al
 423:	00 00                	add    BYTE PTR [rax],al
 425:	00 00                	add    BYTE PTR [rax],al
 427:	00 40 06             	add    BYTE PTR [rax+0x6],al
 42a:	00 00                	add    BYTE PTR [rax],al
 42c:	00 00                	add    BYTE PTR [rax],al
 42e:	00 00                	add    BYTE PTR [rax],al
 430:	c0 0d 20 00 00 00 00 	ror    BYTE PTR [rip+0x20],0x0        # 457 <_init-0x99>
 437:	00 08                	add    BYTE PTR [rax],cl
	...
 441:	06                   	(bad)  
 442:	00 00                	add    BYTE PTR [rax],al
 444:	00 00                	add    BYTE PTR [rax],al
 446:	00 00                	add    BYTE PTR [rax],al
 448:	08 10                	or     BYTE PTR [rax],dl
 44a:	20 00                	and    BYTE PTR [rax],al
 44c:	00 00                	add    BYTE PTR [rax],al
 44e:	00 00                	add    BYTE PTR [rax],al
 450:	08 00                	or     BYTE PTR [rax],al
 452:	00 00                	add    BYTE PTR [rax],al
 454:	00 00                	add    BYTE PTR [rax],al
 456:	00 00                	add    BYTE PTR [rax],al
 458:	08 10                	or     BYTE PTR [rax],dl
 45a:	20 00                	and    BYTE PTR [rax],al
 45c:	00 00                	add    BYTE PTR [rax],al
 45e:	00 00                	add    BYTE PTR [rax],al
 460:	d8 0f                	fmul   DWORD PTR [rdi]
 462:	20 00                	and    BYTE PTR [rax],al
 464:	00 00                	add    BYTE PTR [rax],al
 466:	00 00                	add    BYTE PTR [rax],al
 468:	06                   	(bad)  
 469:	00 00                	add    BYTE PTR [rax],al
 46b:	00 01                	add    BYTE PTR [rcx],al
	...
 475:	00 00                	add    BYTE PTR [rax],al
 477:	00 e0                	add    al,ah
 479:	0f 20 00             	mov    rax,cr0
 47c:	00 00                	add    BYTE PTR [rax],al
 47e:	00 00                	add    BYTE PTR [rax],al
 480:	06                   	(bad)  
 481:	00 00                	add    BYTE PTR [rax],al
 483:	00 03                	add    BYTE PTR [rbx],al
	...
 48d:	00 00                	add    BYTE PTR [rax],al
 48f:	00 e8                	add    al,ch
 491:	0f 20 00             	mov    rax,cr0
 494:	00 00                	add    BYTE PTR [rax],al
 496:	00 00                	add    BYTE PTR [rax],al
 498:	06                   	(bad)  
 499:	00 00                	add    BYTE PTR [rax],al
 49b:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
 4a6:	00 00                	add    BYTE PTR [rax],al
 4a8:	f0 0f 20 00          	lock mov rax,cr0
 4ac:	00 00                	add    BYTE PTR [rax],al
 4ae:	00 00                	add    BYTE PTR [rax],al
 4b0:	06                   	(bad)  
 4b1:	00 00                	add    BYTE PTR [rax],al
 4b3:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 4b9 <_init-0x37>
 4b9:	00 00                	add    BYTE PTR [rax],al
 4bb:	00 00                	add    BYTE PTR [rax],al
 4bd:	00 00                	add    BYTE PTR [rax],al
 4bf:	00 f8                	add    al,bh
 4c1:	0f 20 00             	mov    rax,cr0
 4c4:	00 00                	add    BYTE PTR [rax],al
 4c6:	00 00                	add    BYTE PTR [rax],al
 4c8:	06                   	(bad)  
 4c9:	00 00                	add    BYTE PTR [rax],al
 4cb:	00 06                	add    BYTE PTR [rsi],al
	...

Disassembly of section .rela.plt:

00000000000004d8 <.rela.plt>:
 4d8:	d0 0f                	ror    BYTE PTR [rdi],1
 4da:	20 00                	and    BYTE PTR [rax],al
 4dc:	00 00                	add    BYTE PTR [rax],al
 4de:	00 00                	add    BYTE PTR [rax],al
 4e0:	07                   	(bad)  
 4e1:	00 00                	add    BYTE PTR [rax],al
 4e3:	00 02                	add    BYTE PTR [rdx],al
	...

Disassembly of section .init:

00000000000004f0 <_init>:
 4f0:	48 83 ec 08          	sub    rsp,0x8
 4f4:	48 8b 05 ed 0a 20 00 	mov    rax,QWORD PTR [rip+0x200aed]        # 200fe8 <__gmon_start__>
 4fb:	48 85 c0             	test   rax,rax
 4fe:	74 02                	je     502 <_init+0x12>
 500:	ff d0                	call   rax
 502:	48 83 c4 08          	add    rsp,0x8
 506:	c3                   	ret    

Disassembly of section .plt:

0000000000000510 <.plt>:
 510:	ff 35 aa 0a 20 00    	push   QWORD PTR [rip+0x200aaa]        # 200fc0 <_GLOBAL_OFFSET_TABLE_+0x8>
 516:	ff 25 ac 0a 20 00    	jmp    QWORD PTR [rip+0x200aac]        # 200fc8 <_GLOBAL_OFFSET_TABLE_+0x10>
 51c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000000520 <printf@plt>:
 520:	ff 25 aa 0a 20 00    	jmp    QWORD PTR [rip+0x200aaa]        # 200fd0 <printf@GLIBC_2.2.5>
 526:	68 00 00 00 00       	push   0x0
 52b:	e9 e0 ff ff ff       	jmp    510 <.plt>

Disassembly of section .plt.got:

0000000000000530 <__cxa_finalize@plt>:
 530:	ff 25 c2 0a 20 00    	jmp    QWORD PTR [rip+0x200ac2]        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 536:	66 90                	xchg   ax,ax

Disassembly of section .text:

0000000000000540 <_start>:
 540:	31 ed                	xor    ebp,ebp
 542:	49 89 d1             	mov    r9,rdx
 545:	5e                   	pop    rsi
 546:	48 89 e2             	mov    rdx,rsp
 549:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
 54d:	50                   	push   rax
 54e:	54                   	push   rsp
 54f:	4c 8d 05 da 01 00 00 	lea    r8,[rip+0x1da]        # 730 <__libc_csu_fini>
 556:	48 8d 0d 63 01 00 00 	lea    rcx,[rip+0x163]        # 6c0 <__libc_csu_init>
 55d:	48 8d 3d 31 01 00 00 	lea    rdi,[rip+0x131]        # 695 <main>
 564:	ff 15 76 0a 20 00    	call   QWORD PTR [rip+0x200a76]        # 200fe0 <__libc_start_main@GLIBC_2.2.5>
 56a:	f4                   	hlt    
 56b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000000570 <deregister_tm_clones>:
 570:	48 8d 3d 99 0a 20 00 	lea    rdi,[rip+0x200a99]        # 201010 <__TMC_END__>
 577:	55                   	push   rbp
 578:	48 8d 05 91 0a 20 00 	lea    rax,[rip+0x200a91]        # 201010 <__TMC_END__>
 57f:	48 39 f8             	cmp    rax,rdi
 582:	48 89 e5             	mov    rbp,rsp
 585:	74 19                	je     5a0 <deregister_tm_clones+0x30>
 587:	48 8b 05 4a 0a 20 00 	mov    rax,QWORD PTR [rip+0x200a4a]        # 200fd8 <_ITM_deregisterTMCloneTable>
 58e:	48 85 c0             	test   rax,rax
 591:	74 0d                	je     5a0 <deregister_tm_clones+0x30>
 593:	5d                   	pop    rbp
 594:	ff e0                	jmp    rax
 596:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 59d:	00 00 00 
 5a0:	5d                   	pop    rbp
 5a1:	c3                   	ret    
 5a2:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
 5a6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 5ad:	00 00 00 

00000000000005b0 <register_tm_clones>:
 5b0:	48 8d 3d 59 0a 20 00 	lea    rdi,[rip+0x200a59]        # 201010 <__TMC_END__>
 5b7:	48 8d 35 52 0a 20 00 	lea    rsi,[rip+0x200a52]        # 201010 <__TMC_END__>
 5be:	55                   	push   rbp
 5bf:	48 29 fe             	sub    rsi,rdi
 5c2:	48 89 e5             	mov    rbp,rsp
 5c5:	48 c1 fe 03          	sar    rsi,0x3
 5c9:	48 89 f0             	mov    rax,rsi
 5cc:	48 c1 e8 3f          	shr    rax,0x3f
 5d0:	48 01 c6             	add    rsi,rax
 5d3:	48 d1 fe             	sar    rsi,1
 5d6:	74 18                	je     5f0 <register_tm_clones+0x40>
 5d8:	48 8b 05 11 0a 20 00 	mov    rax,QWORD PTR [rip+0x200a11]        # 200ff0 <_ITM_registerTMCloneTable>
 5df:	48 85 c0             	test   rax,rax
 5e2:	74 0c                	je     5f0 <register_tm_clones+0x40>
 5e4:	5d                   	pop    rbp
 5e5:	ff e0                	jmp    rax
 5e7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
 5ee:	00 00 
 5f0:	5d                   	pop    rbp
 5f1:	c3                   	ret    
 5f2:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
 5f6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 5fd:	00 00 00 

0000000000000600 <__do_global_dtors_aux>:
 600:	80 3d 09 0a 20 00 00 	cmp    BYTE PTR [rip+0x200a09],0x0        # 201010 <__TMC_END__>
 607:	75 2f                	jne    638 <__do_global_dtors_aux+0x38>
 609:	48 83 3d e7 09 20 00 	cmp    QWORD PTR [rip+0x2009e7],0x0        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 610:	00 
 611:	55                   	push   rbp
 612:	48 89 e5             	mov    rbp,rsp
 615:	74 0c                	je     623 <__do_global_dtors_aux+0x23>
 617:	48 8b 3d ea 09 20 00 	mov    rdi,QWORD PTR [rip+0x2009ea]        # 201008 <__dso_handle>
 61e:	e8 0d ff ff ff       	call   530 <__cxa_finalize@plt>
 623:	e8 48 ff ff ff       	call   570 <deregister_tm_clones>
 628:	c6 05 e1 09 20 00 01 	mov    BYTE PTR [rip+0x2009e1],0x1        # 201010 <__TMC_END__>
 62f:	5d                   	pop    rbp
 630:	c3                   	ret    
 631:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
 638:	f3 c3                	repz ret 
 63a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000000640 <frame_dummy>:
 640:	55                   	push   rbp
 641:	48 89 e5             	mov    rbp,rsp
 644:	5d                   	pop    rbp
 645:	e9 66 ff ff ff       	jmp    5b0 <register_tm_clones>

000000000000064a <func>:
 64a:	55                   	push   rbp
 64b:	48 89 e5             	mov    rbp,rsp
 64e:	53                   	push   rbx
 64f:	48 83 ec 18          	sub    rsp,0x18
 653:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
 656:	83 7d ec 01          	cmp    DWORD PTR [rbp-0x14],0x1
 65a:	75 07                	jne    663 <func+0x19>
 65c:	b8 01 00 00 00       	mov    eax,0x1
 661:	eb 2b                	jmp    68e <func+0x44>
 663:	83 7d ec 02          	cmp    DWORD PTR [rbp-0x14],0x2
 667:	75 07                	jne    670 <func+0x26>
 669:	b8 01 00 00 00       	mov    eax,0x1
 66e:	eb 1e                	jmp    68e <func+0x44>
 670:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
 673:	83 e8 01             	sub    eax,0x1
 676:	89 c7                	mov    edi,eax
 678:	e8 cd ff ff ff       	call   64a <func>
 67d:	89 c3                	mov    ebx,eax
 67f:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
 682:	83 e8 02             	sub    eax,0x2
 685:	89 c7                	mov    edi,eax
 687:	e8 be ff ff ff       	call   64a <func>
 68c:	01 d8                	add    eax,ebx
 68e:	48 83 c4 18          	add    rsp,0x18
 692:	5b                   	pop    rbx
 693:	5d                   	pop    rbp
 694:	c3                   	ret    

0000000000000695 <main>:
 695:	55                   	push   rbp
 696:	48 89 e5             	mov    rbp,rsp
 699:	48 8d 35 a8 00 00 00 	lea    rsi,[rip+0xa8]        # 748 <_IO_stdin_used+0x8>
 6a0:	48 8d 3d a9 00 00 00 	lea    rdi,[rip+0xa9]        # 750 <_IO_stdin_used+0x10>
 6a7:	b8 00 00 00 00       	mov    eax,0x0
 6ac:	e8 6f fe ff ff       	call   520 <printf@plt>
 6b1:	b8 00 00 00 00       	mov    eax,0x0
 6b6:	5d                   	pop    rbp
 6b7:	c3                   	ret    
 6b8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
 6bf:	00 

00000000000006c0 <__libc_csu_init>:
 6c0:	41 57                	push   r15
 6c2:	41 56                	push   r14
 6c4:	49 89 d7             	mov    r15,rdx
 6c7:	41 55                	push   r13
 6c9:	41 54                	push   r12
 6cb:	4c 8d 25 e6 06 20 00 	lea    r12,[rip+0x2006e6]        # 200db8 <__frame_dummy_init_array_entry>
 6d2:	55                   	push   rbp
 6d3:	48 8d 2d e6 06 20 00 	lea    rbp,[rip+0x2006e6]        # 200dc0 <__init_array_end>
 6da:	53                   	push   rbx
 6db:	41 89 fd             	mov    r13d,edi
 6de:	49 89 f6             	mov    r14,rsi
 6e1:	4c 29 e5             	sub    rbp,r12
 6e4:	48 83 ec 08          	sub    rsp,0x8
 6e8:	48 c1 fd 03          	sar    rbp,0x3
 6ec:	e8 ff fd ff ff       	call   4f0 <_init>
 6f1:	48 85 ed             	test   rbp,rbp
 6f4:	74 20                	je     716 <__libc_csu_init+0x56>
 6f6:	31 db                	xor    ebx,ebx
 6f8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
 6ff:	00 
 700:	4c 89 fa             	mov    rdx,r15
 703:	4c 89 f6             	mov    rsi,r14
 706:	44 89 ef             	mov    edi,r13d
 709:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
 70d:	48 83 c3 01          	add    rbx,0x1
 711:	48 39 dd             	cmp    rbp,rbx
 714:	75 ea                	jne    700 <__libc_csu_init+0x40>
 716:	48 83 c4 08          	add    rsp,0x8
 71a:	5b                   	pop    rbx
 71b:	5d                   	pop    rbp
 71c:	41 5c                	pop    r12
 71e:	41 5d                	pop    r13
 720:	41 5e                	pop    r14
 722:	41 5f                	pop    r15
 724:	c3                   	ret    
 725:	90                   	nop
 726:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 72d:	00 00 00 

0000000000000730 <__libc_csu_fini>:
 730:	f3 c3                	repz ret 

Disassembly of section .fini:

0000000000000734 <_fini>:
 734:	48 83 ec 08          	sub    rsp,0x8
 738:	48 83 c4 08          	add    rsp,0x8
 73c:	c3                   	ret    

Disassembly of section .rodata:

0000000000000740 <_IO_stdin_used>:
 740:	01 00                	add    DWORD PTR [rax],eax
 742:	02 00                	add    al,BYTE PTR [rax]
 744:	00 00                	add    BYTE PTR [rax],al
 746:	00 00                	add    BYTE PTR [rax],al
 748:	25 64 00 00 00       	and    eax,0x64
 74d:	00 00                	add    BYTE PTR [rax],al
 74f:	00 70 72             	add    BYTE PTR [rax+0x72],dh
 752:	69 6e 74 66 28 22 47 	imul   ebp,DWORD PTR [rsi+0x74],0x47222866
 759:	61                   	(bad)  
 75a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 75b:	65 73 68             	gs jae 7c6 <__GNU_EH_FRAME_HDR+0x46>
 75e:	7b 25                	jnp    785 <__GNU_EH_FRAME_HDR+0x5>
 760:	73 5f                	jae    7c1 <__GNU_EH_FRAME_HDR+0x41>
 762:	65 68 5f 61 5f 72    	gs push 0x725f615f
 768:	65 73 70             	gs jae 7db <__GNU_EH_FRAME_HDR+0x5b>
 76b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 76c:	73 74                	jae    7e2 <__GNU_EH_FRAME_HDR+0x62>
 76e:	61                   	(bad)  
 76f:	7d 22                	jge    793 <__GNU_EH_FRAME_HDR+0x13>
 771:	2c 20                	sub    al,0x20
 773:	66 75 6e             	data16 jne 7e4 <__GNU_EH_FRAME_HDR+0x64>
 776:	63 28                	movsxd ebp,DWORD PTR [rax]
 778:	31 30                	xor    DWORD PTR [rax],esi
 77a:	29 29                	sub    DWORD PTR [rcx],ebp
 77c:	3b 0a                	cmp    ecx,DWORD PTR [rdx]
	...

Disassembly of section .eh_frame_hdr:

0000000000000780 <__GNU_EH_FRAME_HDR>:
 780:	01 1b                	add    DWORD PTR [rbx],ebx
 782:	03 3b                	add    edi,DWORD PTR [rbx]
 784:	44 00 00             	add    BYTE PTR [rax],r8b
 787:	00 07                	add    BYTE PTR [rdi],al
 789:	00 00                	add    BYTE PTR [rax],al
 78b:	00 90 fd ff ff 90    	add    BYTE PTR [rax-0x6f000003],dl
 791:	00 00                	add    BYTE PTR [rax],al
 793:	00 b0 fd ff ff b8    	add    BYTE PTR [rax-0x47000003],dh
 799:	00 00                	add    BYTE PTR [rax],al
 79b:	00 c0                	add    al,al
 79d:	fd                   	std    
 79e:	ff                   	(bad)  
 79f:	ff 60 00             	jmp    QWORD PTR [rax+0x0]
 7a2:	00 00                	add    BYTE PTR [rax],al
 7a4:	ca fe ff             	retf   0xfffe
 7a7:	ff d0                	call   rax
 7a9:	00 00                	add    BYTE PTR [rax],al
 7ab:	00 15 ff ff ff f4    	add    BYTE PTR [rip+0xfffffffff4ffffff],dl        # fffffffff50007b0 <_end+0xfffffffff4dff798>
 7b1:	00 00                	add    BYTE PTR [rax],al
 7b3:	00 40 ff             	add    BYTE PTR [rax-0x1],al
 7b6:	ff                   	(bad)  
 7b7:	ff 18                	call   FWORD PTR [rax]
 7b9:	01 00                	add    DWORD PTR [rax],eax
 7bb:	00 b0 ff ff ff 60    	add    BYTE PTR [rax+0x60ffffff],dh
 7c1:	01 00                	add    DWORD PTR [rax],eax
	...

Disassembly of section .eh_frame:

00000000000007c8 <__FRAME_END__-0x12c>:
 7c8:	14 00                	adc    al,0x0
 7ca:	00 00                	add    BYTE PTR [rax],al
 7cc:	00 00                	add    BYTE PTR [rax],al
 7ce:	00 00                	add    BYTE PTR [rax],al
 7d0:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
 7d3:	00 01                	add    BYTE PTR [rcx],al
 7d5:	78 10                	js     7e7 <__GNU_EH_FRAME_HDR+0x67>
 7d7:	01 1b                	add    DWORD PTR [rbx],ebx
 7d9:	0c 07                	or     al,0x7
 7db:	08 90 01 07 10 14    	or     BYTE PTR [rax+0x14100701],dl
 7e1:	00 00                	add    BYTE PTR [rax],al
 7e3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 7e6:	00 00                	add    BYTE PTR [rax],al
 7e8:	58                   	pop    rax
 7e9:	fd                   	std    
 7ea:	ff                   	(bad)  
 7eb:	ff 2b                	jmp    FWORD PTR [rbx]
	...
 7f5:	00 00                	add    BYTE PTR [rax],al
 7f7:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
 7fa:	00 00                	add    BYTE PTR [rax],al
 7fc:	00 00                	add    BYTE PTR [rax],al
 7fe:	00 00                	add    BYTE PTR [rax],al
 800:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
 803:	00 01                	add    BYTE PTR [rcx],al
 805:	78 10                	js     817 <__GNU_EH_FRAME_HDR+0x97>
 807:	01 1b                	add    DWORD PTR [rbx],ebx
 809:	0c 07                	or     al,0x7
 80b:	08 90 01 00 00 24    	or     BYTE PTR [rax+0x24000001],dl
 811:	00 00                	add    BYTE PTR [rax],al
 813:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 816:	00 00                	add    BYTE PTR [rax],al
 818:	f8                   	clc    
 819:	fc                   	cld    
 81a:	ff                   	(bad)  
 81b:	ff 20                	jmp    QWORD PTR [rax]
 81d:	00 00                	add    BYTE PTR [rax],al
 81f:	00 00                	add    BYTE PTR [rax],al
 821:	0e                   	(bad)  
 822:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
 825:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
 828:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
 82b:	80 00 3f             	add    BYTE PTR [rax],0x3f
 82e:	1a 3b                	sbb    bh,BYTE PTR [rbx]
 830:	2a 33                	sub    dh,BYTE PTR [rbx]
 832:	24 22                	and    al,0x22
 834:	00 00                	add    BYTE PTR [rax],al
 836:	00 00                	add    BYTE PTR [rax],al
 838:	14 00                	adc    al,0x0
 83a:	00 00                	add    BYTE PTR [rax],al
 83c:	44 00 00             	add    BYTE PTR [rax],r8b
 83f:	00 f0                	add    al,dh
 841:	fc                   	cld    
 842:	ff                   	(bad)  
 843:	ff 08                	dec    DWORD PTR [rax]
	...
 84d:	00 00                	add    BYTE PTR [rax],al
 84f:	00 20                	add    BYTE PTR [rax],ah
 851:	00 00                	add    BYTE PTR [rax],al
 853:	00 5c 00 00          	add    BYTE PTR [rax+rax*1+0x0],bl
 857:	00 f2                	add    dl,dh
 859:	fd                   	std    
 85a:	ff                   	(bad)  
 85b:	ff 4b 00             	dec    DWORD PTR [rbx+0x0]
 85e:	00 00                	add    BYTE PTR [rax],al
 860:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 863:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 869:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
 86d:	41 0c 07             	rex.B or al,0x7
 870:	08 00                	or     BYTE PTR [rax],al
 872:	00 00                	add    BYTE PTR [rax],al
 874:	20 00                	and    BYTE PTR [rax],al
 876:	00 00                	add    BYTE PTR [rax],al
 878:	80 00 00             	add    BYTE PTR [rax],0x0
 87b:	00 19                	add    BYTE PTR [rcx],bl
 87d:	fe                   	(bad)  
 87e:	ff                   	(bad)  
 87f:	ff 23                	jmp    QWORD PTR [rbx]
 881:	00 00                	add    BYTE PTR [rax],al
 883:	00 00                	add    BYTE PTR [rax],al
 885:	41 0e                	rex.B (bad) 
 887:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 88d:	5e                   	pop    rsi
 88e:	0c 07                	or     al,0x7
 890:	08 00                	or     BYTE PTR [rax],al
 892:	00 00                	add    BYTE PTR [rax],al
 894:	00 00                	add    BYTE PTR [rax],al
 896:	00 00                	add    BYTE PTR [rax],al
 898:	44 00 00             	add    BYTE PTR [rax],r8b
 89b:	00 a4 00 00 00 20 fe 	add    BYTE PTR [rax+rax*1-0x1e00000],ah
 8a2:	ff                   	(bad)  
 8a3:	ff 65 00             	jmp    QWORD PTR [rbp+0x0]
 8a6:	00 00                	add    BYTE PTR [rax],al
 8a8:	00 42 0e             	add    BYTE PTR [rdx+0xe],al
 8ab:	10 8f 02 42 0e 18    	adc    BYTE PTR [rdi+0x180e4202],cl
 8b1:	8e 03                	mov    es,WORD PTR [rbx]
 8b3:	45 0e                	rex.RB (bad) 
 8b5:	20 8d 04 42 0e 28    	and    BYTE PTR [rbp+0x280e4204],cl
 8bb:	8c 05 48 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e48],es        # ffffffff86301709 <_end+0xffffffff861006f1>
 8c1:	06                   	(bad)  
 8c2:	48 0e                	rex.W (bad) 
 8c4:	38 83 07 4d 0e 40    	cmp    BYTE PTR [rbx+0x400e4d07],al
 8ca:	72 0e                	jb     8da <__GNU_EH_FRAME_HDR+0x15a>
 8cc:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
 8cf:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
 8d2:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
 8d5:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
 8d8:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
 8db:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
 8de:	08 00                	or     BYTE PTR [rax],al
 8e0:	10 00                	adc    BYTE PTR [rax],al
 8e2:	00 00                	add    BYTE PTR [rax],al
 8e4:	ec                   	in     al,dx
 8e5:	00 00                	add    BYTE PTR [rax],al
 8e7:	00 48 fe             	add    BYTE PTR [rax-0x2],cl
 8ea:	ff                   	(bad)  
 8eb:	ff 02                	inc    DWORD PTR [rdx]
 8ed:	00 00                	add    BYTE PTR [rax],al
 8ef:	00 00                	add    BYTE PTR [rax],al
 8f1:	00 00                	add    BYTE PTR [rax],al
	...

00000000000008f4 <__FRAME_END__>:
 8f4:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000200db8 <__frame_dummy_init_array_entry>:
  200db8:	40 06                	rex (bad) 
  200dba:	00 00                	add    BYTE PTR [rax],al
  200dbc:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000200dc0 <__do_global_dtors_aux_fini_array_entry>:
  200dc0:	00 06                	add    BYTE PTR [rsi],al
  200dc2:	00 00                	add    BYTE PTR [rax],al
  200dc4:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000200dc8 <_DYNAMIC>:
  200dc8:	01 00                	add    DWORD PTR [rax],eax
  200dca:	00 00                	add    BYTE PTR [rax],al
  200dcc:	00 00                	add    BYTE PTR [rax],al
  200dce:	00 00                	add    BYTE PTR [rax],al
  200dd0:	01 00                	add    DWORD PTR [rax],eax
  200dd2:	00 00                	add    BYTE PTR [rax],al
  200dd4:	00 00                	add    BYTE PTR [rax],al
  200dd6:	00 00                	add    BYTE PTR [rax],al
  200dd8:	0c 00                	or     al,0x0
  200dda:	00 00                	add    BYTE PTR [rax],al
  200ddc:	00 00                	add    BYTE PTR [rax],al
  200dde:	00 00                	add    BYTE PTR [rax],al
  200de0:	f0 04 00             	lock add al,0x0
  200de3:	00 00                	add    BYTE PTR [rax],al
  200de5:	00 00                	add    BYTE PTR [rax],al
  200de7:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 200ded <_DYNAMIC+0x25>
  200ded:	00 00                	add    BYTE PTR [rax],al
  200def:	00 34 07             	add    BYTE PTR [rdi+rax*1],dh
  200df2:	00 00                	add    BYTE PTR [rax],al
  200df4:	00 00                	add    BYTE PTR [rax],al
  200df6:	00 00                	add    BYTE PTR [rax],al
  200df8:	19 00                	sbb    DWORD PTR [rax],eax
  200dfa:	00 00                	add    BYTE PTR [rax],al
  200dfc:	00 00                	add    BYTE PTR [rax],al
  200dfe:	00 00                	add    BYTE PTR [rax],al
  200e00:	b8 0d 20 00 00       	mov    eax,0x200d
  200e05:	00 00                	add    BYTE PTR [rax],al
  200e07:	00 1b                	add    BYTE PTR [rbx],bl
  200e09:	00 00                	add    BYTE PTR [rax],al
  200e0b:	00 00                	add    BYTE PTR [rax],al
  200e0d:	00 00                	add    BYTE PTR [rax],al
  200e0f:	00 08                	add    BYTE PTR [rax],cl
  200e11:	00 00                	add    BYTE PTR [rax],al
  200e13:	00 00                	add    BYTE PTR [rax],al
  200e15:	00 00                	add    BYTE PTR [rax],al
  200e17:	00 1a                	add    BYTE PTR [rdx],bl
  200e19:	00 00                	add    BYTE PTR [rax],al
  200e1b:	00 00                	add    BYTE PTR [rax],al
  200e1d:	00 00                	add    BYTE PTR [rax],al
  200e1f:	00 c0                	add    al,al
  200e21:	0d 20 00 00 00       	or     eax,0x20
  200e26:	00 00                	add    BYTE PTR [rax],al
  200e28:	1c 00                	sbb    al,0x0
  200e2a:	00 00                	add    BYTE PTR [rax],al
  200e2c:	00 00                	add    BYTE PTR [rax],al
  200e2e:	00 00                	add    BYTE PTR [rax],al
  200e30:	08 00                	or     BYTE PTR [rax],al
  200e32:	00 00                	add    BYTE PTR [rax],al
  200e34:	00 00                	add    BYTE PTR [rax],al
  200e36:	00 00                	add    BYTE PTR [rax],al
  200e38:	f5                   	cmc    
  200e39:	fe                   	(bad)  
  200e3a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200e3d:	00 00                	add    BYTE PTR [rax],al
  200e3f:	00 98 02 00 00 00    	add    BYTE PTR [rax+0x2],bl
  200e45:	00 00                	add    BYTE PTR [rax],al
  200e47:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 200e4d <_DYNAMIC+0x85>
  200e4d:	00 00                	add    BYTE PTR [rax],al
  200e4f:	00 60 03             	add    BYTE PTR [rax+0x3],ah
  200e52:	00 00                	add    BYTE PTR [rax],al
  200e54:	00 00                	add    BYTE PTR [rax],al
  200e56:	00 00                	add    BYTE PTR [rax],al
  200e58:	06                   	(bad)  
  200e59:	00 00                	add    BYTE PTR [rax],al
  200e5b:	00 00                	add    BYTE PTR [rax],al
  200e5d:	00 00                	add    BYTE PTR [rax],al
  200e5f:	00 b8 02 00 00 00    	add    BYTE PTR [rax+0x2],bh
  200e65:	00 00                	add    BYTE PTR [rax],al
  200e67:	00 0a                	add    BYTE PTR [rdx],cl
  200e69:	00 00                	add    BYTE PTR [rax],al
  200e6b:	00 00                	add    BYTE PTR [rax],al
  200e6d:	00 00                	add    BYTE PTR [rax],al
  200e6f:	00 84 00 00 00 00 00 	add    BYTE PTR [rax+rax*1+0x0],al
  200e76:	00 00                	add    BYTE PTR [rax],al
  200e78:	0b 00                	or     eax,DWORD PTR [rax]
  200e7a:	00 00                	add    BYTE PTR [rax],al
  200e7c:	00 00                	add    BYTE PTR [rax],al
  200e7e:	00 00                	add    BYTE PTR [rax],al
  200e80:	18 00                	sbb    BYTE PTR [rax],al
  200e82:	00 00                	add    BYTE PTR [rax],al
  200e84:	00 00                	add    BYTE PTR [rax],al
  200e86:	00 00                	add    BYTE PTR [rax],al
  200e88:	15 00 00 00 00       	adc    eax,0x0
	...
  200e95:	00 00                	add    BYTE PTR [rax],al
  200e97:	00 03                	add    BYTE PTR [rbx],al
  200e99:	00 00                	add    BYTE PTR [rax],al
  200e9b:	00 00                	add    BYTE PTR [rax],al
  200e9d:	00 00                	add    BYTE PTR [rax],al
  200e9f:	00 b8 0f 20 00 00    	add    BYTE PTR [rax+0x200f],bh
  200ea5:	00 00                	add    BYTE PTR [rax],al
  200ea7:	00 02                	add    BYTE PTR [rdx],al
  200ea9:	00 00                	add    BYTE PTR [rax],al
  200eab:	00 00                	add    BYTE PTR [rax],al
  200ead:	00 00                	add    BYTE PTR [rax],al
  200eaf:	00 18                	add    BYTE PTR [rax],bl
  200eb1:	00 00                	add    BYTE PTR [rax],al
  200eb3:	00 00                	add    BYTE PTR [rax],al
  200eb5:	00 00                	add    BYTE PTR [rax],al
  200eb7:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
  200eba:	00 00                	add    BYTE PTR [rax],al
  200ebc:	00 00                	add    BYTE PTR [rax],al
  200ebe:	00 00                	add    BYTE PTR [rax],al
  200ec0:	07                   	(bad)  
  200ec1:	00 00                	add    BYTE PTR [rax],al
  200ec3:	00 00                	add    BYTE PTR [rax],al
  200ec5:	00 00                	add    BYTE PTR [rax],al
  200ec7:	00 17                	add    BYTE PTR [rdi],dl
  200ec9:	00 00                	add    BYTE PTR [rax],al
  200ecb:	00 00                	add    BYTE PTR [rax],al
  200ecd:	00 00                	add    BYTE PTR [rax],al
  200ecf:	00 d8                	add    al,bl
  200ed1:	04 00                	add    al,0x0
  200ed3:	00 00                	add    BYTE PTR [rax],al
  200ed5:	00 00                	add    BYTE PTR [rax],al
  200ed7:	00 07                	add    BYTE PTR [rdi],al
  200ed9:	00 00                	add    BYTE PTR [rax],al
  200edb:	00 00                	add    BYTE PTR [rax],al
  200edd:	00 00                	add    BYTE PTR [rax],al
  200edf:	00 18                	add    BYTE PTR [rax],bl
  200ee1:	04 00                	add    al,0x0
  200ee3:	00 00                	add    BYTE PTR [rax],al
  200ee5:	00 00                	add    BYTE PTR [rax],al
  200ee7:	00 08                	add    BYTE PTR [rax],cl
  200ee9:	00 00                	add    BYTE PTR [rax],al
  200eeb:	00 00                	add    BYTE PTR [rax],al
  200eed:	00 00                	add    BYTE PTR [rax],al
  200eef:	00 c0                	add    al,al
  200ef1:	00 00                	add    BYTE PTR [rax],al
  200ef3:	00 00                	add    BYTE PTR [rax],al
  200ef5:	00 00                	add    BYTE PTR [rax],al
  200ef7:	00 09                	add    BYTE PTR [rcx],cl
  200ef9:	00 00                	add    BYTE PTR [rax],al
  200efb:	00 00                	add    BYTE PTR [rax],al
  200efd:	00 00                	add    BYTE PTR [rax],al
  200eff:	00 18                	add    BYTE PTR [rax],bl
  200f01:	00 00                	add    BYTE PTR [rax],al
  200f03:	00 00                	add    BYTE PTR [rax],al
  200f05:	00 00                	add    BYTE PTR [rax],al
  200f07:	00 1e                	add    BYTE PTR [rsi],bl
  200f09:	00 00                	add    BYTE PTR [rax],al
  200f0b:	00 00                	add    BYTE PTR [rax],al
  200f0d:	00 00                	add    BYTE PTR [rax],al
  200f0f:	00 08                	add    BYTE PTR [rax],cl
  200f11:	00 00                	add    BYTE PTR [rax],al
  200f13:	00 00                	add    BYTE PTR [rax],al
  200f15:	00 00                	add    BYTE PTR [rax],al
  200f17:	00 fb                	add    bl,bh
  200f19:	ff                   	(bad)  
  200f1a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f1d:	00 00                	add    BYTE PTR [rax],al
  200f1f:	00 01                	add    BYTE PTR [rcx],al
  200f21:	00 00                	add    BYTE PTR [rax],al
  200f23:	08 00                	or     BYTE PTR [rax],al
  200f25:	00 00                	add    BYTE PTR [rax],al
  200f27:	00 fe                	add    dh,bh
  200f29:	ff                   	(bad)  
  200f2a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f2d:	00 00                	add    BYTE PTR [rax],al
  200f2f:	00 f8                	add    al,bh
  200f31:	03 00                	add    eax,DWORD PTR [rax]
  200f33:	00 00                	add    BYTE PTR [rax],al
  200f35:	00 00                	add    BYTE PTR [rax],al
  200f37:	00 ff                	add    bh,bh
  200f39:	ff                   	(bad)  
  200f3a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f3d:	00 00                	add    BYTE PTR [rax],al
  200f3f:	00 01                	add    BYTE PTR [rcx],al
  200f41:	00 00                	add    BYTE PTR [rax],al
  200f43:	00 00                	add    BYTE PTR [rax],al
  200f45:	00 00                	add    BYTE PTR [rax],al
  200f47:	00 f0                	add    al,dh
  200f49:	ff                   	(bad)  
  200f4a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f4d:	00 00                	add    BYTE PTR [rax],al
  200f4f:	00 e4                	add    ah,ah
  200f51:	03 00                	add    eax,DWORD PTR [rax]
  200f53:	00 00                	add    BYTE PTR [rax],al
  200f55:	00 00                	add    BYTE PTR [rax],al
  200f57:	00 f9                	add    cl,bh
  200f59:	ff                   	(bad)  
  200f5a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f5d:	00 00                	add    BYTE PTR [rax],al
  200f5f:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .got:

0000000000200fb8 <_GLOBAL_OFFSET_TABLE_>:
  200fb8:	c8 0d 20 00          	enter  0x200d,0x0
	...
  200fd0:	26 05 00 00 00 00    	es add eax,0x0
	...

Disassembly of section .data:

0000000000201000 <__data_start>:
	...

0000000000201008 <__dso_handle>:
  201008:	08 10                	or     BYTE PTR [rax],dl
  20100a:	20 00                	and    BYTE PTR [rax],al
  20100c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .bss:

0000000000201010 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <_init-0x478>
   a:	74 75                	je     81 <_init-0x46f>
   c:	20 37                	and    BYTE PTR [rdi],dh
   e:	2e 34 2e             	cs xor al,0x2e
  11:	30 2d 31 75 62 75    	xor    BYTE PTR [rip+0x75627531],ch        # 75627548 <_end+0x75426530>
  17:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  18:	74 75                	je     8f <_init-0x461>
  1a:	31 7e 31             	xor    DWORD PTR [rsi+0x31],edi
  1d:	38 2e                	cmp    BYTE PTR [rsi],ch
  1f:	30 34 29             	xor    BYTE PTR [rcx+rbp*1],dh
  22:	20 37                	and    BYTE PTR [rdi],dh
  24:	2e 34 2e             	cs xor al,0x2e
  27:	30 00                	xor    BYTE PTR [rax],al
